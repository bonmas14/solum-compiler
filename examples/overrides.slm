// doesnt work at all, because this is prototyping code!

array : Array(Something) = default;


main : () = {
    arr : Array(Something) = init;


    arr.push(100);
    array_add(arr, 1000);
    array_add(arr, 1350);
    array_add(arr, 5350);

}

Something : struct = {
    x, y : u64;
}

Array : struct(DataType) = {
    size : u64; 
    data : ^DataType;
}

override [index : u64] : Array = {
    assert(this.size > 0);
    assert(this.data != default);

    assert(index < this.size);

    return this.data[index];
}

override Array(Type) : Array(Type) = {
    this.
}


array_add : (array : Array(Type), value : ^Type) = {
    if (array == default) create_array(array, sizeof(Type), default);
    // check size
    // allocate if needed
    // add value
}

array_create : (array : ^Array(Type), size : u64) = {
    assert(size > 0);

    allocator := context.allocator;

    data, result := allocator.alloc(.ACTION_ALLOC, size * sizeof(Type));

    if (!result) {
        log("Couldn't allocate space for array data");
        return;
    }

    array.size = size;
    array.data = data;

    return;
}
