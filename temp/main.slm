
// we will do a standart example of convay's game of life


// what we need to do is auto reordering for C++ backend

// do we need void type, or something else???
// like unk

State : struct = {
    width  : s64;
    height : s64;
    buffer : ^u8; 
}

                   // should be converted into Array type with metadata binded to it, 
                   // so when you create state it will create an array

                   // create_array(size);
;
// allocate : (size : u64) -> ^s = { } 


// we need ',' in cases:

// calling functions
    // calling_funciton(a,b,c,d,e,f);

// function definition returns
    // f : () -> s32, s32 = {}

// expressions? 
    // there could be only one '=' if we do ','
    // a, b = b, a;
    // a, b = 3, 1;

// return statements (through expressions, currently)
    // return a, b;

// initialization?
    // a, b : s32 = 1, 2;


main : () -> Int = {
    gol : State = create_state(32, 32);


    // this is doesnt work but we will check
    a, b : s32 = 1000;

    return 0;
}

create_state : (w : u32, h : u32) -> State, b32 = {
    state : State = default;

    state.buffer = cast(^u8) calloc(1, w * h);
    
    if (gol.buffer == default) {
        return default, false;
    }

    state.width  = w;
    state.height = h;

    return state, true;
}

update_state : (current : ^State) = {
    
}

draw_state : (current : ^State) = {

}
