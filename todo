- Rewrite parser to not use BNF-type logic to parse files. because it is too much of a code

- fix error when analyzer reports that variable doesn't have it's expression if there's only one.
This should not happen because one expression is set to multiple variables at the same time

- create allocator functions that will check if pointer inside of theirs function
for debug purposes

- we dont know how to merge scopes and resolve named includes

- ensure that files loaded with appropriate file slash (system dependent)

- constants

- we have complie flag... just validate a node and try to compile function body
then if you cant add or evaluate something, you just dont put compiled bool to true on entity

- change types from flags to just enum as in good training language.
because its superior way of dealing with types

ideas:

- soft inlining - is when compiler generates output source code but inlines all of functions on source level. 
could be great for debug purposes?
