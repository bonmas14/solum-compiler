- Rewrite parser to not use BNF-type logic to parse files. because it is too much of a code

- fix error when analyzer reports that variable doesn't have it's expression if there's only one.
This should not happen because one expression is set to multiple variables at the same time

- create allocator functions that will check if pointer inside of theirs function
for debug purposes

- we dont know how to merge scopes and resolve named includes

- ensure that files loaded with appropriate file slash (system dependent)

- constants

- fix the problem with fact that if it is a pointer check dependencies can break info...,
currently this dont work:

...

P : () -> A = prototype;
A : struct = {
    p : P;
}

// asserts at string copy, because list_add added empty string!
...

A : struct = {
    p : ^V;
}

V : struct = { a : A; }

// just dont print the A.p type in debug output
...

ideas:

- soft inlining - is when compiler generates output source code but inlines all of functions on source level. 
could be great for debug purposes?
